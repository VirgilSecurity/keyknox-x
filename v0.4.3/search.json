{"Protocols/KeyknoxCryptoProtocol.html#/s:16VirgilSDKKeyknox21KeyknoxCryptoProtocolP7decrypt09encryptedC5Value10privateKey10publicKeysAA09DecryptedcH0CAA09EncryptedcH0C_0aD00a7PrivateJ0CSayAL0a6PublicJ0CGtKF":{"name":"decrypt(encryptedKeyknoxValue:privateKey:publicKeys:)","abstract":"<p>Decrypts EncryptedKeyknoxValue</p>","parent_name":"KeyknoxCryptoProtocol"},"Protocols/KeyknoxCryptoProtocol.html#/s:16VirgilSDKKeyknox21KeyknoxCryptoProtocolP7encrypt4data10privateKey10publicKeys10Foundation4DataV_AJtAJ_0aD00a7PrivateI0CSayAK0a6PublicI0CGtKF":{"name":"encrypt(data:privateKey:publicKeys:)","abstract":"<p>Encrypts data for Keyknox</p>","parent_name":"KeyknoxCryptoProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP12storeEntriesy0A3SDK16GenericOperationCySayAA0C5EntryCGGSayAA0dL0CGF":{"name":"storeEntries(_:)","abstract":"<p>Store entries to cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP10storeEntry8withName4data4meta0A3SDK16GenericOperationCyAA0cH0CGSS_10Foundation4DataVSDyS2SGSgtF":{"name":"storeEntry(withName:data:meta:)","abstract":"<p>Store entry to cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP11updateEntry8withName4data4meta0A3SDK16GenericOperationCyAA0cH0CGSS_10Foundation4DataVSDyS2SGSgtF":{"name":"updateEntry(withName:data:meta:)","abstract":"<p>Update entry in Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP18retrieveAllEntriesSayAA0C5EntryCGyKF":{"name":"retrieveAllEntries()","abstract":"<p>Returns all entries loaded from Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP13retrieveEntry8withNameAA0cH0CSS_tKF":{"name":"retrieveEntry(withName:)","abstract":"<p>Retrieve entry loaded from Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP11existsEntry8withNameSbSS_tKF":{"name":"existsEntry(withName:)","abstract":"<p>Check if entry exists in list of loaded from Cloud entries</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP11deleteEntry8withName0A3SDK16GenericOperationCyytGSS_tF":{"name":"deleteEntry(withName:)","abstract":"<p>Deletes entry from Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP13deleteEntries9withNames0A3SDK16GenericOperationCyytGSaySSG_tF":{"name":"deleteEntries(withNames:)","abstract":"<p>Deletes entries from Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP16deleteAllEntries0A3SDK16GenericOperationCyytGyF":{"name":"deleteAllEntries()","abstract":"<p>Deletes all entries from Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP08retrieveC7Entries0A3SDK16GenericOperationCyytGyF":{"name":"retrieveCloudEntries()","abstract":"<p>Retrieves entries from Cloud</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/CloudKeyStorageProtocol.html#/s:16VirgilSDKKeyknox23CloudKeyStorageProtocolP16updateRecipients13newPublicKeys0i7PrivateD00A3SDK16GenericOperationCyytGSay0A6Crypto0ajD0CGSg_AK0alD0CSgtF":{"name":"updateRecipients(newPublicKeys:newPrivateKey:)","abstract":"<p>Updated recipients. See KeyknoxManager.updateRecipients</p>","parent_name":"CloudKeyStorageProtocol"},"Protocols/KeyknoxClientProtocol.html#/c:@M@VirgilSDKKeyknox@objc(pl)VSKKeyknoxClientProtocol(im)pushValueWithMeta:value:previousHash:token:error:":{"name":"pushValue(meta:value:previousHash:token:)","abstract":"<p>Push value to Keyknox service</p>","parent_name":"KeyknoxClientProtocol"},"Protocols/KeyknoxClientProtocol.html#/c:@M@VirgilSDKKeyknox@objc(pl)VSKKeyknoxClientProtocol(im)pullValueWithToken:error:":{"name":"pullValue(token:)","abstract":"<p>Pulls values from Keyknox service</p>","parent_name":"KeyknoxClientProtocol"},"Protocols/KeyknoxClientProtocol.html#/c:@M@VirgilSDKKeyknox@objc(pl)VSKKeyknoxClientProtocol(im)resetValueWithToken:error:":{"name":"resetValue(token:)","abstract":"<p>Resets Keyknox value (makes it empty). Also increments version</p>","parent_name":"KeyknoxClientProtocol"},"Protocols/KeyknoxClientProtocol.html":{"name":"KeyknoxClientProtocol","abstract":"<p>Protocol for KeyknoxClient</p>"},"Protocols/CloudKeyStorageProtocol.html":{"name":"CloudKeyStorageProtocol","abstract":"<p>Cloud KeyStorage protocol</p>"},"Protocols/KeyknoxCryptoProtocol.html":{"name":"KeyknoxCryptoProtocol","abstract":"<p>Protocol with crypto operations needed for Keyknox</p>"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorKeychainEntryNotFoundWhileUpdating":{"name":"keychainEntryNotFoundWhileUpdating","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorCloudEntryNotFoundWhileUpdating":{"name":"cloudEntryNotFoundWhileUpdating","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorCloudEntryNotFoundWhileDeleting":{"name":"cloudEntryNotFoundWhileDeleting","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorKeychainEntryNotFoundWhileComparing":{"name":"keychainEntryNotFoundWhileComparing","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorKeychainEntryAlreadyExistsWhileStoring":{"name":"keychainEntryAlreadyExistsWhileStoring","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorCloudEntryAlreadyExistsWhileStoring":{"name":"cloudEntryAlreadyExistsWhileStoring","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorInvalidModificationDateInKeychainEntry":{"name":"invalidModificationDateInKeychainEntry","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorInvalidCreationDateInKeychainEntry":{"name":"invalidCreationDateInKeychainEntry","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorNoMetaInKeychainEntry":{"name":"noMetaInKeychainEntry","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorInvalidKeysInEntryMeta":{"name":"invalidKeysInEntryMeta","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorInconsistentStateError":{"name":"inconsistentStateError","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/SyncKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKSyncKeyStorageError@VSKSyncKeyStorageErrorEntrySavingError":{"name":"entrySavingError","abstract":"<p>Undocumented</p>","parent_name":"SyncKeyStorageError"},"Enums/KeyknoxManagerError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxManagerError@VSKKeyknoxManagerErrorNoPublicKeys":{"name":"noPublicKeys","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxManagerError"},"Enums/KeyknoxManagerError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxManagerError@VSKKeyknoxManagerErrorKeysShouldBeUpdated":{"name":"keysShouldBeUpdated","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxManagerError"},"Enums/KeyknoxManagerError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxManagerError@VSKKeyknoxManagerErrorServerRespondedWithTamperedValue":{"name":"serverRespondedWithTamperedValue","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxManagerError"},"Enums/KeyknoxManagerError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxManagerError@VSKKeyknoxManagerErrorDataIsEmpty":{"name":"dataIsEmpty","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxManagerError"},"Enums/KeyknoxCryptoError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxCryptoError@VSKKeyknoxCryptoErrorDecryptionFailed":{"name":"decryptionFailed","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxCryptoError"},"Enums/KeyknoxCryptoError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxCryptoError@VSKKeyknoxCryptoErrorEmptyPublicKeysList":{"name":"emptyPublicKeysList","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxCryptoError"},"Enums/KeyknoxCryptoError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxCryptoError@VSKKeyknoxCryptoErrorEmptyData":{"name":"emptyData","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxCryptoError"},"Enums/CloudKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKCloudKeyStorageError@VSKCloudKeyStorageErrorEntryNotFound":{"name":"entryNotFound","abstract":"<p>Undocumented</p>","parent_name":"CloudKeyStorageError"},"Enums/CloudKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKCloudKeyStorageError@VSKCloudKeyStorageErrorEntrySavingError":{"name":"entrySavingError","abstract":"<p>Undocumented</p>","parent_name":"CloudKeyStorageError"},"Enums/CloudKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKCloudKeyStorageError@VSKCloudKeyStorageErrorEntryAlreadyExists":{"name":"entryAlreadyExists","abstract":"<p>Undocumented</p>","parent_name":"CloudKeyStorageError"},"Enums/CloudKeyStorageError.html#/c:@M@VirgilSDKKeyknox@E@VSKCloudKeyStorageError@VSKCloudKeyStorageErrorCloudStorageOutOfSync":{"name":"cloudStorageOutOfSync","abstract":"<p>Undocumented</p>","parent_name":"CloudKeyStorageError"},"Enums/KeyknoxClientError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxClientError@VSKKeyknoxClientErrorConstructingUrl":{"name":"constructingUrl","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxClientError"},"Enums/KeyknoxClientError.html#/c:@M@VirgilSDKKeyknox@E@VSKKeyknoxClientError@VSKKeyknoxClientErrorInvalidPreviousHashHeader":{"name":"invalidPreviousHashHeader","abstract":"<p>Undocumented</p>","parent_name":"KeyknoxClientError"},"Enums/KeyknoxClientError.html":{"name":"KeyknoxClientError","abstract":"<p>Declares client error types and codes</p>"},"Enums/CloudKeyStorageError.html":{"name":"CloudKeyStorageError","abstract":"<p>Declares error types and codes for KeyknoxManager</p>"},"Enums/KeyknoxCryptoError.html":{"name":"KeyknoxCryptoError","abstract":"<p>Declares error types and codes for KeyknoxCrypto</p>"},"Enums/KeyknoxManagerError.html":{"name":"KeyknoxManagerError","abstract":"<p>Declares error types and codes for KeyknoxManager</p>"},"Enums/SyncKeyStorageError.html":{"name":"SyncKeyStorageError","abstract":"<p>Declares error types and codes for SyncKeyStorage</p>"},"Classes/SyncKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(py)identity":{"name":"identity","abstract":"<p>User&rsquo;s identity to separate keys in Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC05clouddE0AA05ClouddE8Protocol_pvp":{"name":"cloudKeyStorage","abstract":"<p>CloudKeyStorageProtocol implementation</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC09makeLocalE08identity08keychainE00A3SDK08KeychainE8Protocol_pSS_AgH_ptFZ":{"name":"makeLocalStorage(identity:keychainStorage:)","abstract":"<p>Creates local key storage instance, to read keys withoud connecting to the Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC8identity08keychainE005clouddE0ACSS_0A3SDK08KeychainE8Protocol_pAA05ClouddeK0_ptcfc":{"name":"init(identity:keychainStorage:cloudKeyStorage:)","abstract":"<p>Init</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)initWithIdentity:cloudKeyStorage:error:":{"name":"init(identity:cloudKeyStorage:)","abstract":"<p>Init</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)initWithIdentity:accessTokenProvider:publicKeys:privateKey:error:":{"name":"init(identity:accessTokenProvider:publicKeys:privateKey:)","abstract":"<p>Init</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)updateEntryWithName:data:meta:completion:":{"name":"updateEntry(withName:data:meta:completion:)","abstract":"<p>Updates entry in Keyknox Cloud and Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)deleteEntryWithName:completion:":{"name":"deleteEntry(withName:completion:)","abstract":"<p>Deletes entries from both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)storeEntryWithName:data:meta:completion:":{"name":"storeEntry(withName:data:meta:completion:)","abstract":"<p>Stores entry in both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)syncWithCompletion:":{"name":"sync(completion:)","abstract":"<p>Performs synchronization between Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)existsEntryNoThrowWithName:":{"name":"existsEntryNoThrow(withName:)","abstract":"<p>Checks if entry exists in Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)storeEntries:completion:":{"name":"storeEntries(_:completion:)","abstract":"<p>Stores entries in both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)deleteEntriesWithNames:completion:":{"name":"deleteEntries(withNames:completion:)","abstract":"<p>Deletes entries from both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)updateRecipientsWithNewPublicKeys:newPrivateKey:completion:":{"name":"updateRecipients(newPublicKeys:newPrivateKey:completion:)","abstract":"<p>Updates recipients. See KeyknoxManager.updateRecipients</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)deleteAllEntriesWithCompletion:":{"name":"deleteAllEntries(completion:)","abstract":"<p>Deletes all entries in both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC11updateEntry8withName4data4meta0A3SDK16GenericOperationCyytGSS_10Foundation4DataVSDyS2SGSgtF":{"name":"updateEntry(withName:data:meta:)","abstract":"<p>Updates entry in Keyknox Cloud and Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKSyncKeyStorage(im)retrieveEntryWithName:error:":{"name":"retrieveEntry(withName:)","abstract":"<p>Retrieves entry from Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC13deleteEntries9withNames0A3SDK16GenericOperationCyytGSaySSG_tF":{"name":"deleteEntries(withNames:)","abstract":"<p>Deletes entries from both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC11deleteEntry8withName0A3SDK16GenericOperationCyytGSS_tF":{"name":"deleteEntry(withName:)","abstract":"<p>Deletes entry from both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC10storeEntry8withName4data4meta0A3SDK16GenericOperationCyAH08KeychainG0CGSS_10Foundation4DataVSDyS2SGSgtF":{"name":"storeEntry(withName:data:meta:)","abstract":"<p>Stores entry in both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC12storeEntriesy0A3SDK16GenericOperationCySayAE13KeychainEntryCGGSayAA0dL0CGF":{"name":"storeEntries(_:)","abstract":"<p>Stores entries in both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC4sync0A3SDK16GenericOperationCyytGyF":{"name":"sync()","abstract":"<p>Performs synchronization between Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC16updateRecipients13newPublicKeys0h7PrivateD00A3SDK16GenericOperationCyytGSay0A6Crypto0aiD0CGSg_AK0akD0CSgtF":{"name":"updateRecipients(newPublicKeys:newPrivateKey:)","abstract":"<p>Updates recipients. See KeyknoxManager.updateRecipients</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC18retrieveAllEntriesSay0A3SDK13KeychainEntryCGyKF":{"name":"retrieveAllEntries()","abstract":"<p>Retrieves all entries from Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC11existsEntry8withNameSbSS_tKF":{"name":"existsEntry(withName:)","abstract":"<p>Checks if entry exists in Keychain</p>","parent_name":"SyncKeyStorage"},"Classes/SyncKeyStorage.html#/s:16VirgilSDKKeyknox14SyncKeyStorageC16deleteAllEntries0A3SDK16GenericOperationCyytGyF":{"name":"deleteAllEntries()","abstract":"<p>Deletes all entries in both Keychain and Keyknox Cloud</p>","parent_name":"SyncKeyStorage"},"Classes/KeyknoxManager.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(py)accessTokenProvider":{"name":"accessTokenProvider","abstract":"<p>AccessTokenProvider instance used for getting Access Token","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(py)keyknoxClient":{"name":"keyknoxClient","abstract":"<p>KeyknoxClient instance used for performing queries</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(py)publicKeys":{"name":"publicKeys","abstract":"<p>Public keys used for encryption and signature verification</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(py)privateKey":{"name":"privateKey","abstract":"<p>Private key used for decryption and signing</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC6cryptoAA0C14CryptoProtocol_pvp":{"name":"crypto","abstract":"<p>KeyknoxCryptoProtocol implementation</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(py)retryOnUnauthorized":{"name":"retryOnUnauthorized","abstract":"<p>Retry on 401 error</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC19accessTokenProvider13keyknoxClient10publicKeys10privateKey6crypto19retryOnUnauthorizedAC0A3SDK06AccessfG0_p_AA0cI8Protocol_pSay0A6Crypto0a6PublicM0CGAM0a7PrivateM0CAA0cuT0_pSgSbtKcfc":{"name":"init(accessTokenProvider:keyknoxClient:publicKeys:privateKey:crypto:retryOnUnauthorized:)","abstract":"<p>Init</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(im)initWithAccessTokenProvider:keyknoxClient:publicKeys:privateKey:retryOnUnauthorized:error:":{"name":"init(accessTokenProvider:keyknoxClient:publicKeys:privateKey:retryOnUnauthorized:)","abstract":"<p>Init</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(im)pushValue:previousHash:completion:":{"name":"pushValue(_:previousHash:completion:)","abstract":"<p>Signs then encrypts and pushed value to Keyknox service</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(im)pullValueWithCompletion:":{"name":"pullValue(completion:)","abstract":"<p>Pull value, decrypt then verify signature</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(im)resetValueWithCompletion:":{"name":"resetValue(completion:)","abstract":"<p>Resets Keyknox value (makes it empty). Also increments version</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(im)updateRecipientsWithNewPublicKeys:newPrivateKey:completion:":{"name":"updateRecipients(newPublicKeys:newPrivateKey:completion:)","abstract":"<p>Updates public keys for ecnryption and signature verification","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxManager(im)updateRecipientsWithValue:previousHash:newPublicKeys:newPrivateKey:completion:":{"name":"updateRecipients(value:previousHash:newPublicKeys:newPrivateKey:completion:)","abstract":"<p>Updates public keys for ecnryption and signature verification","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC9pushValue_12previousHash0A3SDK16GenericOperationCyAA09DecryptedcF0CG10Foundation4DataV_ANSgtF":{"name":"pushValue(_:previousHash:)","abstract":"<p>Signs then encrypts and pushed value to Keyknox service</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC9pullValue0A3SDK16GenericOperationCyAA09DecryptedcF0CGyF":{"name":"pullValue()","abstract":"<p>Pull value, decrypt then verify signature</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC10resetValue0A3SDK16GenericOperationCyAA09DecryptedcF0CGyF":{"name":"resetValue()","abstract":"<p>Resets Keyknox value (makes it empty). Also increments version</p>","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC16updateRecipients13newPublicKeys0G10PrivateKey0A3SDK16GenericOperationCyAA09DecryptedC5ValueCGSay0A6Crypto0ahK0CGSg_AM0ajK0CSgtF":{"name":"updateRecipients(newPublicKeys:newPrivateKey:)","abstract":"<p>Updates public keys for ecnryption and signature verification","parent_name":"KeyknoxManager"},"Classes/KeyknoxManager.html#/s:16VirgilSDKKeyknox14KeyknoxManagerC16updateRecipients5value12previousHash13newPublicKeys0J10PrivateKey0A3SDK16GenericOperationCyAA09DecryptedC5ValueCG10Foundation4DataV_AQSay0A6Crypto0akN0CGSgAR0amN0CSgtF":{"name":"updateRecipients(value:previousHash:newPublicKeys:newPrivateKey:)","abstract":"<p>Updates public keys for ecnryption and signature verification","parent_name":"KeyknoxManager"},"Classes/KeyknoxCrypto.html#/s:16VirgilSDKKeyknox13KeyknoxCryptoC6crypto0aD0AECvp":{"name":"crypto","abstract":"<p>VirgilCrypto</p>","parent_name":"KeyknoxCrypto"},"Classes/KeyknoxCrypto.html#/s:16VirgilSDKKeyknox13KeyknoxCryptoC6cryptoAC0aD0AEC_tcfc":{"name":"init(crypto:)","abstract":"<p>Init</p>","parent_name":"KeyknoxCrypto"},"Classes/KeyknoxCrypto.html#/s:16VirgilSDKKeyknox13KeyknoxCryptoC7decrypt09encryptedC5Value10privateKey10publicKeysAA09DecryptedcG0CAA09EncryptedcG0C_0aD00a7PrivateI0CSayAL0a6PublicI0CGtKF":{"name":"decrypt(encryptedKeyknoxValue:privateKey:publicKeys:)","abstract":"<p>Decrypts EncryptedKeyknoxValue</p>","parent_name":"KeyknoxCrypto"},"Classes/KeyknoxCrypto.html#/s:16VirgilSDKKeyknox13KeyknoxCryptoC7encrypt4data10privateKey10publicKeys10Foundation4DataV_AJtAJ_0aD00a7PrivateH0CSayAK0a6PublicH0CGtKF":{"name":"encrypt(data:privateKey:publicKeys:)","abstract":"<p>Encrypts data for Keyknox</p>","parent_name":"KeyknoxCrypto"},"Classes/KeyEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyEntry(py)name":{"name":"name","abstract":"<p>Key entry name</p>","parent_name":"KeyEntry"},"Classes/KeyEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyEntry(py)data":{"name":"data","abstract":"<p>Key entry data</p>","parent_name":"KeyEntry"},"Classes/KeyEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyEntry(py)meta":{"name":"meta","abstract":"<p>Key entry meta</p>","parent_name":"KeyEntry"},"Classes/KeyEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyEntry(im)initWithName:data:meta:":{"name":"init(name:data:meta:)","abstract":"<p>Init</p>","parent_name":"KeyEntry"},"Classes/CloudKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(py)keyknoxManager":{"name":"keyknoxManager","abstract":"<p>KeyknoxManager</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(py)storageWasSynced":{"name":"storageWasSynced","abstract":"<p>Shows whether this storage was synced</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)initWithKeyknoxManager:":{"name":"init(keyknoxManager:)","abstract":"<p>Init</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)initWithAccessTokenProvider:publicKeys:privateKey:error:":{"name":"init(accessTokenProvider:publicKeys:privateKey:)","abstract":"<p>Init</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)retrieveCloudEntriesWithCompletion:":{"name":"retrieveCloudEntries(completion:)","abstract":"<p>Retrieves entries from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)storeEntries:completion:":{"name":"storeEntries(_:completion:)","abstract":"<p>Stores entries to cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)existsEntryNoThrowWithName:":{"name":"existsEntryNoThrow(withName:)","abstract":"<p>Checks if entry exists in list of loaded from Cloud entries</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)storeEntryWithName:data:meta:completion:":{"name":"storeEntry(withName:data:meta:completion:)","abstract":"<p>Stores entry to cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)deleteEntryWithName:completion:":{"name":"deleteEntry(withName:completion:)","abstract":"<p>Deletes entry from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)deleteEntriesWithNames:completion:":{"name":"deleteEntries(withNames:completion:)","abstract":"<p>Deletes entries from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)deleteAllEntriesWithCompletion:":{"name":"deleteAllEntries(completion:)","abstract":"<p>Deletes all entries from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)updateEntryWithName:data:meta:completion:":{"name":"updateEntry(withName:data:meta:completion:)","abstract":"<p>Updates entry in Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)updateRecipientsWithNewPublicKeys:newPrivateKey:completion:":{"name":"updateRecipients(newPublicKeys:newPrivateKey:completion:)","abstract":"<p>Updated recipients. See KeyknoxManager.updateRecipients</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC12storeEntriesy0A3SDK16GenericOperationCySayAA0C5EntryCGGSayAA0dK0CGF":{"name":"storeEntries(_:)","abstract":"<p>Stores entries to cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC10storeEntry8withName4data4meta0A3SDK16GenericOperationCyAA0cG0CGSS_10Foundation4DataVSDyS2SGSgtF":{"name":"storeEntry(withName:data:meta:)","abstract":"<p>Stores entry to cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC11updateEntry8withName4data4meta0A3SDK16GenericOperationCyAA0cG0CGSS_10Foundation4DataVSDyS2SGSgtF":{"name":"updateEntry(withName:data:meta:)","abstract":"<p>Updates entry in Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)retrieveEntryWithName:error:":{"name":"retrieveEntry(withName:)","abstract":"<p>Retrieves entry loaded from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKCloudKeyStorage(im)retrieveAllEntriesAndReturnError:":{"name":"retrieveAllEntries()","abstract":"<p>Returns all entries loaded from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC11existsEntry8withNameSbSS_tKF":{"name":"existsEntry(withName:)","abstract":"<p>Checks if entry exists in list of loaded from Cloud entries</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC11deleteEntry8withName0A3SDK16GenericOperationCyytGSS_tF":{"name":"deleteEntry(withName:)","abstract":"<p>Deletes entry from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC13deleteEntries9withNames0A3SDK16GenericOperationCyytGSaySSG_tF":{"name":"deleteEntries(withNames:)","abstract":"<p>Deletes entries from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC16deleteAllEntries0A3SDK16GenericOperationCyytGyF":{"name":"deleteAllEntries()","abstract":"<p>Deletes all entries from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC16updateRecipients13newPublicKeys0h7PrivateD00A3SDK16GenericOperationCyytGSay0A6Crypto0aiD0CGSg_AK0akD0CSgtF":{"name":"updateRecipients(newPublicKeys:newPrivateKey:)","abstract":"<p>Updates recipients. See KeyknoxManager.updateRecipients</p>","parent_name":"CloudKeyStorage"},"Classes/CloudKeyStorage.html#/s:16VirgilSDKKeyknox15CloudKeyStorageC08retrieveC7Entries0A3SDK16GenericOperationCyytGyF":{"name":"retrieveCloudEntries()","abstract":"<p>Retrieves entries from Cloud</p>","parent_name":"CloudKeyStorage"},"Classes/CloudEntry/CodingKeys.html#/s:16VirgilSDKKeyknox10CloudEntryC10CodingKeysO4nameyA2EmF":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"CodingKeys"},"Classes/CloudEntry/CodingKeys.html#/s:16VirgilSDKKeyknox10CloudEntryC10CodingKeysO4datayA2EmF":{"name":"data","abstract":"<p>Undocumented</p>","parent_name":"CodingKeys"},"Classes/CloudEntry/CodingKeys.html#/s:16VirgilSDKKeyknox10CloudEntryC10CodingKeysO12creationDateyA2EmF":{"name":"creationDate","abstract":"<p>Undocumented</p>","parent_name":"CodingKeys"},"Classes/CloudEntry/CodingKeys.html#/s:16VirgilSDKKeyknox10CloudEntryC10CodingKeysO16modificationDateyA2EmF":{"name":"modificationDate","abstract":"<p>Undocumented</p>","parent_name":"CodingKeys"},"Classes/CloudEntry/CodingKeys.html#/s:16VirgilSDKKeyknox10CloudEntryC10CodingKeysO4metayA2EmF":{"name":"meta","abstract":"<p>Undocumented</p>","parent_name":"CodingKeys"},"Classes/CloudEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudEntry(py)name":{"name":"name","abstract":"<p>Entry name</p>","parent_name":"CloudEntry"},"Classes/CloudEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudEntry(py)data":{"name":"data","abstract":"<p>Entry data</p>","parent_name":"CloudEntry"},"Classes/CloudEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudEntry(py)creationDate":{"name":"creationDate","abstract":"<p>Entry creation date</p>","parent_name":"CloudEntry"},"Classes/CloudEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudEntry(py)modificationDate":{"name":"modificationDate","abstract":"<p>Entry modification date</p>","parent_name":"CloudEntry"},"Classes/CloudEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudEntry(py)meta":{"name":"meta","abstract":"<p>Entry meta</p>","parent_name":"CloudEntry"},"Classes/CloudEntry.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKCloudEntry(im)initWithName:data:creationDate:modificationDate:meta:":{"name":"init(name:data:creationDate:modificationDate:meta:)","abstract":"<p>Init</p>","parent_name":"CloudEntry"},"Classes/CloudEntry/CodingKeys.html":{"name":"CodingKeys","abstract":"<p>CodingKeys</p>","parent_name":"CloudEntry"},"Classes/CloudEntry.html#/s:16VirgilSDKKeyknox10CloudEntryC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"CloudEntry"},"Classes/KeyknoxValue.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxValue(py)meta":{"name":"meta","abstract":"<p>Meta info</p>","parent_name":"KeyknoxValue"},"Classes/KeyknoxValue.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxValue(py)value":{"name":"value","abstract":"<p>Value</p>","parent_name":"KeyknoxValue"},"Classes/KeyknoxValue.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxValue(py)version":{"name":"version","abstract":"<p>Value in X.Y format. X - major version, Y - minor</p>","parent_name":"KeyknoxValue"},"Classes/KeyknoxValue.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxValue(py)keyknoxHash":{"name":"keyknoxHash","abstract":"<p>Keyknox hash</p>","parent_name":"KeyknoxValue"},"Classes/KeyknoxClient.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(cpy)defaultURL":{"name":"defaultURL","abstract":"<p>Default URL for service</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/s:16VirgilSDKKeyknox13KeyknoxClientC10serviceUrl10connectionAC10Foundation3URLV_0A3SDK22HttpConnectionProtocol_ptcfc":{"name":"init(serviceUrl:connection:)","abstract":"<p>Initializes a new <code>KeyknoxClient</code> instance</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(im)init":{"name":"init()","abstract":"<p>Initializes a new <code>KeyknoxClient</code> instance</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(im)initWithServiceUrl:":{"name":"init(serviceUrl:)","abstract":"<p>Initializes a new <code>KeyknoxClient</code> instance</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/s:16VirgilSDKKeyknox13KeyknoxClientC11handleError10statusCode4bodys0F0_pSi_10Foundation4DataVSgtF":{"name":"handleError(statusCode:body:)","abstract":"<p>Handles error from Keyknox Service</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(cpy)virgilKeyknoxHashKey":{"name":"virgilKeyknoxHashKey","abstract":"<p>Header key for blob hash</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(cpy)virgilKeyknoxPreviousHashKey":{"name":"virgilKeyknoxPreviousHashKey","abstract":"<p>Header key for previous blob hash</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(im)pushValueWithMeta:value:previousHash:token:error:":{"name":"pushValue(meta:value:previousHash:token:)","abstract":"<p>Push value to Keyknox service</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(im)pullValueWithToken:error:":{"name":"pullValue(token:)","abstract":"<p>Pulls values from Keyknox service</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html#/c:@CM@VirgilSDKKeyknox@objc(cs)VSKKeyknoxClient(im)resetValueWithToken:error:":{"name":"resetValue(token:)","abstract":"<p>Resets Keyknox value (makes it empty). Also increments version</p>","parent_name":"KeyknoxClient"},"Classes/KeyknoxClient.html":{"name":"KeyknoxClient","abstract":"<p>Class representing operations with Virgil Keyknox service</p>"},"Classes/KeyknoxValue.html":{"name":"KeyknoxValue","abstract":"<p>Value stored on Keyknox service</p>"},"Classes.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKEncryptedKeyknoxValue":{"name":"EncryptedKeyknoxValue","abstract":"<p>Represent encrypted Keyknox value</p>"},"Classes.html#/c:@M@VirgilSDKKeyknox@objc(cs)VSKDecryptedKeyknoxValue":{"name":"DecryptedKeyknoxValue","abstract":"<p>Represent decrypted Keyknox value</p>"},"Classes/CloudEntry.html":{"name":"CloudEntry","abstract":"<p>Class representing entry in cloud</p>"},"Classes/CloudKeyStorage.html":{"name":"CloudKeyStorage","abstract":"<p>Class responsible for storing Keys in Cloud using E2EE</p>"},"Classes/KeyEntry.html":{"name":"KeyEntry","abstract":"<p>Class representing Key entry: name + data + meta</p>"},"Classes/KeyknoxCrypto.html":{"name":"KeyknoxCrypto","abstract":"<p>KeyknoxCryptoProtocol implementation using VirgilCrypto</p>"},"Classes/KeyknoxManager.html":{"name":"KeyknoxManager","abstract":"<p>Class responsible for managing Keyknox value with E2EE</p>"},"Classes/SyncKeyStorage.html":{"name":"SyncKeyStorage","abstract":"<p>Class responsible for synchronization between Keychain and Keyknox Cloud</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}